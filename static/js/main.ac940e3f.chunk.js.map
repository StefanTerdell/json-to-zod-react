{"version":3,"sources":["../node_modules/prettier sync","App.tsx","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","JsonToZod","useState","json","setJson","zod","setZod","errors","setErrors","name","setName","setModule","useEffect","jsonToZod","json5","parse","style","display","flexDirection","margin","padding","border","value","onChange","target","type","checked","width","color","onClick","select","disabled","copy","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"8GAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,sIC0EVC,EA7EU,WACvB,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAwBN,mBAAS,UAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAA4BR,oBAAS,GAArC,mBAAOJ,EAAP,KAAea,EAAf,KAWA,OATAC,qBAAU,WACR,IACEN,EAAOO,oBAAUC,IAAMC,MAAMZ,GAAOM,GAAQ,SAAUX,IACtDU,EAAU,IACV,MAAOf,GACPe,EAAU,YAAD,OAAaf,OAEvB,CAACU,EAAMM,EAAMX,IAGd,qCACE,6CACA,sBAAKkB,MAAO,CAAEC,QAAS,QAAvB,UACE,sBACED,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,OAAQ,GACRC,QAAS,GACTC,OAAQ,kBANZ,UASE,4CACA,uBAAOC,MAAOb,EAAMc,SAAU,SAAC9B,GAAD,OAAOiB,EAAQjB,EAAE+B,OAAOF,UACtD,uCACA,uBACEG,KAAK,WACLC,QAAS5B,EACTyB,SAAU,SAAC9B,GAAD,OAAOkB,EAAUlB,EAAE+B,OAAOE,YAEtC,qCACA,0BACEV,MAAO,CAAEW,MAAO,KAChBL,MAAOnB,EACPoB,SAAU,SAAC9B,GAAD,OAAOW,EAAQX,EAAE+B,OAAOF,aAGtC,sBACEN,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,OAAQ,GACRC,QAAS,GACTC,OAAQ,kBANZ,UASE,uCACA,0BACEL,MAAO,CACLW,MAAO,IACPC,MAAOrB,EAAS,MAAQ,SAE1Be,MAAOf,GAAUF,EAEjBwB,QAAS,SAACpC,GAAD,OAAOA,EAAE+B,OAAOM,YAE3B,wBACEd,MAAO,CAAEW,MAAO,QAChBI,WAAYxB,EACZsB,QAAS,kBAAMG,IAAK3B,IAHtB,wBASJ,mBAAG4B,KAAK,4CAAR,8CC/DSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.ac940e3f.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 35;","import React, { useState, useEffect } from \"react\";\nimport { jsonToZod } from \"json-to-zod\";\nimport copy from \"copy-to-clipboard\";\nimport json5 from \"json5\";\n\nexport const JsonToZod = () => {\n  const [json, setJson] = useState(\"{}\");\n  const [zod, setZod] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n  const [name, setName] = useState(\"schema\");\n  const [module, setModule] = useState(false);\n\n  useEffect(() => {\n    try {\n      setZod(jsonToZod(json5.parse(json), name || \"schema\", module));\n      setErrors(\"\");\n    } catch (e) {\n      setErrors(`Errors:\\n${e}`);\n    }\n  }, [json, name, module]);\n\n  return (\n    <>\n      <h1>Json To Zod</h1>\n      <div style={{ display: \"flex\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            margin: 10,\n            padding: 10,\n            border: \"1px solid grey\",\n          }}\n        >\n          <b>Schema name</b>\n          <input value={name} onChange={(e) => setName(e.target.value)}></input>\n          <b>Module</b>\n          <input\n            type=\"checkbox\"\n            checked={module}\n            onChange={(e) => setModule(e.target.checked)}\n          ></input>\n          <b>Json</b>\n          <textarea\n            style={{ width: 400 }}\n            value={json}\n            onChange={(e) => setJson(e.target.value)}\n          ></textarea>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            margin: 10,\n            padding: 10,\n            border: \"1px solid grey\",\n          }}\n        >\n          <b>Result</b>\n          <textarea\n            style={{\n              width: 400,\n              color: errors ? \"red\" : \"black\",\n            }}\n            value={errors || zod}\n            // @ts-ignore\n            onClick={(e) => e.target.select()}\n          ></textarea>\n          <button\n            style={{ width: \"100%\" }}\n            disabled={!!errors}\n            onClick={() => copy(zod)}\n          >\n            Copy\n          </button>\n        </div>\n      </div>\n      <a href=\"https://www.npmjs.com/package/json-to-zod\">Get the CLI NPM package here</a>\n    </>\n  );\n};\n\nexport default JsonToZod;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}