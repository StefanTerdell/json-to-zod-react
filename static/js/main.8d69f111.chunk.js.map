{"version":3,"sources":["../node_modules/prettier sync","App.tsx","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","JsonToZod","useState","json","setJson","zod","setZod","errors","setErrors","name","setName","setModule","useEffect","jsonToZod","json5","parse","style","display","flexDirection","margin","padding","border","value","onChange","target","type","checked","width","color","onClick","select","disabled","copy","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"8GAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,sIC0EVC,EA7EU,WACvB,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAwBN,mBAAS,UAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAA4BR,oBAAS,GAArC,mBAAOJ,EAAP,KAAea,EAAf,KAWA,OATAC,qBAAU,WACR,IACEN,EAAOO,oBAAUC,IAAMC,MAAMZ,GAAOM,GAAQ,SAAUX,IACtDU,EAAU,IACV,MAAOf,GACPe,EAAU,YAAD,OAAaf,OAEvB,CAACU,EAAMM,EAAMX,IAGd,qCACE,6CACA,sBAAKkB,MAAO,CAAEC,QAAS,QAAvB,UACE,sBACED,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,OAAQ,GACRC,QAAS,GACTC,OAAQ,kBANZ,UASE,4CACA,uBAAOC,MAAOb,EAAMc,SAAU,SAAC9B,GAAD,OAAOiB,EAAQjB,EAAE+B,OAAOF,UACtD,uCACA,uBACEG,KAAK,WACLC,QAAS5B,EACTyB,SAAU,SAAC9B,GAAD,OAAOkB,EAAUlB,EAAE+B,OAAOE,YAEtC,qCACA,0BACEV,MAAO,CAAEW,MAAO,KAChBL,MAAOnB,EACPoB,SAAU,SAAC9B,GAAD,OAAOW,EAAQX,EAAE+B,OAAOF,aAGtC,sBACEN,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,OAAQ,GACRC,QAAS,GACTC,OAAQ,kBANZ,UASE,uCACA,0BACEL,MAAO,CACLW,MAAO,IACPC,MAAOrB,EAAS,MAAQ,SAE1Be,MAAOf,GAAUF,EAEjBwB,QAAS,SAACpC,GAAD,OAAOA,EAAE+B,OAAOM,YAE3B,wBACEd,MAAO,CAAEW,MAAO,QAChBI,WAAYxB,EACZsB,QAAS,kBAAMG,IAAK3B,IAHtB,wBASJ,mBAAG4B,KAAK,4CAAR,8CC/DSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.8d69f111.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 35;","import React, { useState, useEffect } from \"react\";\r\nimport { jsonToZod } from \"json-to-zod\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport json5 from \"json5\";\r\n\r\nexport const JsonToZod = () => {\r\n  const [json, setJson] = useState(\"{}\");\r\n  const [zod, setZod] = useState(\"\");\r\n  const [errors, setErrors] = useState(\"\");\r\n  const [name, setName] = useState(\"schema\");\r\n  const [module, setModule] = useState(false);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setZod(jsonToZod(json5.parse(json), name || \"schema\", module));\r\n      setErrors(\"\");\r\n    } catch (e) {\r\n      setErrors(`Errors:\\n${e}`);\r\n    }\r\n  }, [json, name, module]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Json To Zod</h1>\r\n      <div style={{ display: \"flex\" }}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            margin: 10,\r\n            padding: 10,\r\n            border: \"1px solid grey\",\r\n          }}\r\n        >\r\n          <b>Schema name</b>\r\n          <input value={name} onChange={(e) => setName(e.target.value)}></input>\r\n          <b>Module</b>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={module}\r\n            onChange={(e) => setModule(e.target.checked)}\r\n          ></input>\r\n          <b>Json</b>\r\n          <textarea\r\n            style={{ width: 400 }}\r\n            value={json}\r\n            onChange={(e) => setJson(e.target.value)}\r\n          ></textarea>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            margin: 10,\r\n            padding: 10,\r\n            border: \"1px solid grey\",\r\n          }}\r\n        >\r\n          <b>Result</b>\r\n          <textarea\r\n            style={{\r\n              width: 400,\r\n              color: errors ? \"red\" : \"black\",\r\n            }}\r\n            value={errors || zod}\r\n            // @ts-ignore\r\n            onClick={(e) => e.target.select()}\r\n          ></textarea>\r\n          <button\r\n            style={{ width: \"100%\" }}\r\n            disabled={!!errors}\r\n            onClick={() => copy(zod)}\r\n          >\r\n            Copy\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <a href=\"https://www.npmjs.com/package/json-to-zod\">Get the CLI NPM package here</a>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JsonToZod;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}